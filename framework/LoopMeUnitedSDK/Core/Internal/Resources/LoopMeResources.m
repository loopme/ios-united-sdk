#import "LoopMeResources.h"

NSString * const kLoopMeResourceBase64Thumb = @"iVBORw0KGgoAAAANSUhEUgAAABUAAAAVCAYAAACpF6WWAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAAsTAAALEwEAmpwYAAABy2lUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNS40LjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgICAgICAgICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIj4KICAgICAgICAgPHRpZmY6T3JpZW50YXRpb24+MTwvdGlmZjpPcmllbnRhdGlvbj4KICAgICAgICAgPHhtcDpDcmVhdG9yVG9vbD5BZG9iZSBJbWFnZVJlYWR5PC94bXA6Q3JlYXRvclRvb2w+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgqyI37xAAAAG0lEQVQ4EWNgGAWjITAaAqMhMBoCoyEwgkIAAAb5AAF4XTsKAAAAAElFTkSuQmCC";
NSString * const kLoopMeResourceBase64ShaderV = @"Ly8KLy8gIFNoYWRlci52c2gKLy8KLy8gIENyZWF0ZWQgYnkg76O/IG9uIDExLzgvMTUuCi8vICBDb3B5cmlnaHQgwqkgMjAxNSBIYW50b24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuCi8vCgphdHRyaWJ1dGUgdmVjNCBwb3NpdGlvbjsKYXR0cmlidXRlIHZlYzIgdGV4Q29vcmQ7Cgp2YXJ5aW5nIHZlYzIgdl90ZXh0dXJlQ29vcmRpbmF0ZTsKCnVuaWZvcm0gbWF0NCBtb2RlbFZpZXdQcm9qZWN0aW9uTWF0cml4OwoKdm9pZCBtYWluKCkgewogIHZfdGV4dHVyZUNvb3JkaW5hdGUgPSB0ZXhDb29yZDsKICBnbF9Qb3NpdGlvbiA9IG1vZGVsVmlld1Byb2plY3Rpb25NYXRyaXggKiBwb3NpdGlvbjsKfQo=";
NSString * const kLoopMeResourceBase64ShaderF = @"Ly8KLy8gIFNoYWRlci5mc2gKLy8KLy8gIENyZWF0ZWQgYnkg76O/IG9uIDExLzgvMTUuCi8vICBDb3B5cmlnaHQgwqkgMjAxNSBIYW50b24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuCi8vCgovL3ZhcnlpbmcgbG93cCB2ZWM0IGNvbG9yVmFyeWluZzsKCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0Owp1bmlmb3JtIHNhbXBsZXIyRCBTYW1wbGVyWTsKdW5pZm9ybSBzYW1wbGVyMkQgU2FtcGxlclVWOwp2YXJ5aW5nIG1lZGl1bXAgdmVjMiB2X3RleHR1cmVDb29yZGluYXRlOwoKdW5pZm9ybSBtYXQzIGNvbG9yQ29udmVyc2lvbk1hdHJpeDsKCnZvaWQgbWFpbigpIHsKICBtZWRpdW1wIHZlYzMgeXV2OwogIGxvd3AgdmVjMyByZ2I7CiAgCiAgLy8gU3VidHJhY3QgY29uc3RhbnRzIHRvIG1hcCB0aGUgdmlkZW8gcmFuZ2Ugc3RhcnQgYXQgMAogIHl1di54ID0gKHRleHR1cmUyRChTYW1wbGVyWSwgdl90ZXh0dXJlQ29vcmRpbmF0ZSkuciAtICgxNi4wLzI1NS4wKSkqIDEuMDsKICB5dXYueXogPSAodGV4dHVyZTJEKFNhbXBsZXJVViwgdl90ZXh0dXJlQ29vcmRpbmF0ZSkucmcgLSB2ZWMyKDAuNSwgMC41KSkqIDEuMDsKICAKICByZ2IgPSBjb2xvckNvbnZlcnNpb25NYXRyaXggKiB5dXY7CiAgCiAgZ2xfRnJhZ0NvbG9yID0gdmVjNChyZ2IsMSk7Cn0=";
NSString * const kLoopMeResourceBase64Mraid = @"";
NSString * const kLoopMeResourceBase64Vast4 = @"PCFET0NUWVBFIGh0bWw+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPjwvdGl0bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgIChmdW5jdGlvbigpIHsKICAgICAgICAgICAgIHZhciBzY3JpcHRzQXJyYXkgPSBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtTQ1JJUFRQTEFDRV0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXTsKICAgICAgICAgICAgIAogICAgICAgICAgICAgc2NyaXB0c0FycmF5LmZvckVhY2goZnVuY3Rpb24oZWxlbSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9hZFNjcmlwdChlbGVtLCB1bmljb3JuU2NyaXB0KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgCiAgICAgICAgICAgICBmdW5jdGlvbiB1bmljb3JuU2NyaXB0KHBhdGgsIHJlcykgewogICAgICAgICAgICAgKHJlcyA9PT0gJ29rJykgPyB3aW5kb3cubG9jYXRpb24gPSAibG1zY3JpcHQ6Ly9sb2FkZWQiCiAgICAgICAgICAgICA6IHdpbmRvdy5sb2NhdGlvbiA9ICJsbXNjcmlwdDovL25vdGxvYWRlZCIKICAgICAgICAgICAgIH0KICAgICAgICAgICAgIAogICAgICAgICAgICAgZnVuY3Rpb24gbG9hZFNjcmlwdChwYXRoLCBjYWxsYmFjaykgewogICAgICAgICAgICAgCiAgICAgICAgICAgICB2YXIgZG9uZSA9IGZhbHNlOwogICAgICAgICAgICAgdmFyIHNjciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpOwogICAgICAgICAgICAgCiAgICAgICAgICAgICBzY3Iub25sb2FkID0gaGFuZGxlTG9hZDsKICAgICAgICAgICAgIHNjci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBoYW5kbGVSZWFkeVN0YXRlQ2hhbmdlOwogICAgICAgICAgICAgc2NyLm9uZXJyb3IgPSBoYW5kbGVFcnJvcjsKICAgICAgICAgICAgIHNjci5zcmMgPSBwYXRoOwogICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzY3IpOwogICAgICAgICAgICAgCiAgICAgICAgICAgICBmdW5jdGlvbiBoYW5kbGVMb2FkKCkgewogICAgICAgICAgICAgaWYgKCFkb25lKSB7CiAgICAgICAgICAgICBkb25lID0gdHJ1ZTsKICAgICAgICAgICAgIGNhbGxiYWNrKHBhdGgsICJvayIpOwogICAgICAgICAgICAgfQogICAgICAgICAgICAgfQogICAgICAgICAgICAgCiAgICAgICAgICAgICBmdW5jdGlvbiBoYW5kbGVSZWFkeVN0YXRlQ2hhbmdlKCkgewogICAgICAgICAgICAgdmFyIHN0YXRlOwogICAgICAgICAgICAgCiAgICAgICAgICAgICBpZiAoIWRvbmUpIHsKICAgICAgICAgICAgIHN0YXRlID0gc2NyLnJlYWR5U3RhdGU7CiAgICAgICAgICAgICBpZiAoc3RhdGUgPT09ICJjb21wbGV0ZSIpIHsKICAgICAgICAgICAgIGhhbmRsZUxvYWQoKTsKICAgICAgICAgICAgIH0KICAgICAgICAgICAgIH0KICAgICAgICAgICAgIH0KICAgICAgICAgICAgIGZ1bmN0aW9uIGhhbmRsZUVycm9yKCkgewogICAgICAgICAgICAgaWYgKCFkb25lKSB7CiAgICAgICAgICAgICBkb25lID0gdHJ1ZTsKICAgICAgICAgICAgIGNhbGxiYWNrKHBhdGgsICJlcnJvciIpOwogICAgICAgICAgICAgfQogICAgICAgICAgICAgfQogICAgICAgICAgICAgfQogICAgICAgICAgICAgCiAgICAgICAgICAgICB9KSgpOwogICAgICAgICAgICAgCiAgICAgICAgICAgIDwvc2NyaXB0PgogICAgPC9ib2R5Pgo8L2h0bWw+Cgo=";
NSString * const kLoopMeResourceBase64Unmute = @"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";
extern NSString * const kLoopMeResourceBase64Skip = @"iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAL/klEQVRogbVae0xUZxb/MS9gZpgZQHmI8tIBZEAka0ERCGLryurCsi2IiGu3xuCWPhKTtmn6+Mu2MWmqsaaG2oZUwFdNUWILGw2gkqpVFhiMgrUoooO8H/NgZpgZNmd2pnu5dwYGtL/kGrzf83zfefzOueOF5wM/AEsAhAOQSyQShVgslggEApGXlxempqamDAaDXq/XjwGgpxeABsDEs67+LAJIAMQAiFcqlUtTUlJ8s7KysGzZMoSHh2PRokUQi8X2jpOTkxgaGsKjR4/Q29uLK1eu4MaNG8aurq7HAO4AuAdAx1nhDxJACiAlODh4dX5+vqy4uBhr1qyBr68vp+NsMBqNaGlpwcmTJ1FTU6PTaDRtAH6Z763MRwAegD8FBARklJWVyUpLSxEWFsbptBA8ffoU3377LQ4fPqwbGBj42SGIxZOp+Jw3rhEA4O9FRUVrq6qqvF955RXIZDKXHRcCqVSKzMxMFBQUiCYmJpa3tbWFO2xEP9d0ntxAtEKh+NvBgwdlr776KqeRDZvNZtd3OlVSk+npaXh7eyM4OBhBQUHg8+c+s++//x5lZWX6wcHBWgBdnA7zEEAVFRWVV11dLVq3bh2n0YmxsTFcvnwZ9fX1UKvVU11dXXqtVjtutVrtasDj8QRSqVQWExMjUalUopycHJDBk6G7Q3t7O0pKSqy3b9+uA3DLTbdZBVCpVKr88+fPC5YvX85pJDx8+BDl5eVkiPqenp7fAPwKoB/AqEgkmrJarXAIQK5UAEABIBiAMiwsbEVhYaF07969iImJ4cwNh23k5+dPX79+/ScANzkdZhEgKiIiorihoUEYHR3NaSS3ePDgQRw6dEg7ODhIE7cDGGf2EYlEYAnAnoZiR4K/v3/qG2+8oXjnnXfg5+fHWWtwcBDZ2dl0E2cB3PVEAH+ZTLb74sWL0pSUFE7jgwcP8Nprr6GpqYmu9Yo7t+eBAE5QPMlITU1d+8033yAhIYHT4c6dO9iwYcPkwMDAd3QxzDa2RZGrLCgvLw/esmULZ6KrV68iNzd3sr29/UfH5k2cTs6J+Xy7ARMoGpNxuwFJdv/JkydPT58+HZmQkCBiq9TixYuhVCqFZ86cCQHQQb7CnQAvFBYWpuzfv5+zVHNzM/Ly8nT9/f2nHJFzVsxDACeGJicnf6upqVmRlJTkyxYiLi4OGo1G1tLSQtfa43zPVCGpXC7f29raKo2KipoxmNQmPT3dqNFoTgB4xFn6+SJYoVDsvHr1qpStTmQPiYmJxv7+/nJyFHCojBNkTJzNm81mkP/XaDT1bjbvaTBkQwhAzHkL9I+NjdWWlJTYxsdn+AW7Kr333ns+AH736c7FJUFBQbkVFRUiiopMfP755xTmWwFcZi1EwmdIpdI/m81mpcMLuTRoFwhIS0sry8zMzOzo6BhnGyaA4f7+fm+LxbJs06ZNMxri4+PJbQeOj4+TLZicN6DMy8uThISEzOjc09ODAwcOaAE0cveA9OLi4uyWlpbQc+fOxUVFRf0DwHrWrbpD3KFDh8RVVVW8yMjI1ZGRkaCHhStffvnlCHkgJuRyObZv3063oHKeohePx1Pt3LmTs9ZXX32F0dHR6y5OlieVSuPI2MnY8vLyiB4Ld+zY8RKAbeSKOZOxxvv4+Nj/8Pb25hHVoCc2NpbZx2gymX6meMPGtm3byE2vtHtoUp/o6OhlRImZIHpQWVlpAKDmzADwRSKRgMf7/2GTflZVVeHrr7+Olcvl/wSwkjNq/ug4c+bMqEajmTFw1apVWLlyJVFhf9pBWGpqqg+bz1PS0dfXR/RA62LZ6enpaZsr17hnzx4KcrKMjAy6CQom3pxOnsM0MTHRVVdXN2MAHVx2djbtPZL+Cd+wYQNnxh9/pFg1OxN0h9WrV9uJ3fvvv/8Cj8ej21jqpqsnuEdzsZGWlkZvlpAAckoDWceLjo4Oi4OYLQiUTn766aeora0NiY6OJgNLc0Nd5sJAW1ubgfgXE2T0IpHInycWixVsAQYGBtDZ2al1BotnAVGS5uZm78LCwk0OA581E2IZMkHX09MzQsGUiaVLlxL5kwskEomUDJAJorFarXbC07RuLoSGhuL06dOUdcW9++67iwwGQydzSFfXTE0l6sGExWIxjI7OPEuyWYFAIOQJhUIh24BNJhOpkYX4jPN5HigrK6NISllMKGu6GTsmFWY9VtoTE0KhkPbFdxl0nCTsj4BEIuFs2ANMu9sTz2KxTFHuygRxeS8vLz7xeefzPHDq1Cl89tlnYy6ow4zdkQqxHgEFOiYovyA/LqBy2dDQkCIwMPD3ZqIUEolEPj4+TrrzzLsnUvbhhx/iyJEjRAYpUY9jtrMNl20TpOUKhWLGOzp0OnwelfuoYsYEVRBiY2OlHlCCOXHjxg3KpmxHjhyhBOg48f7ZxrA3Tx45LCwsgM2VyNHodDot2cD448ePZzRSpFOpVEJHAr4gkM4Sj8nKyhptbW09CaBhgV4tKCkpScxmyeRWjUbjMAnQ29TUxBnlSCmVnAYPQNWK3Nxc7Nu3T200Gisc1YqFYsWLL77IMfpbt+yVln4S4PG1a9dMbEOmuk1QUJDSTdLh5QCn4YcffiB/b7xw4cIF+q8LJjsfkIuP3bp1K2fIpUuXyPAfkAC67u7uXiq0MkFGXVRURD4vkTMasJEXYMYHg8GAt99+Gy+//PLD3t7e7xjFKK6UniM+Nzd3MVv/7927R1RngBIfEmDaarXeOXHiBGfWt956i+qW6xylDyasWq22m7K1vr4+O3PNysqyHT58+BqAagB9c2ze5rxxk8lkoyBFD8uABXw+f/2+ffs4g+mWHdHc6lxAGhIS8i+1Wi1h04qPPvoI+/fvp2rxT6x5RAA2hoaGxgwPD+vNZvMVT6oVDgSmpaXtjoqK8q2uria32srpAWTu3r07m2pFTJDgycnJU52dnUcBjDh1wKzT6aQymWwZVYmZoOLWxYsXwzQazVOWC6T4cF+n06mtVuutudwjC5O9vb2/dHR0XHd8rWEjPDo6emt1dTWf7X0qKyspR6c88z9gXbEsMDBwb1tbm5iYHhOUl6anp+tHR0crXUTR5w1/sVi8q76+XpGRkTFjap1Oh6SkpKnu7u5jRJrBSsAnhoeHmz/44APOfqgSUFVVJfH19S3yJDZQvstMN8lbsamAGwTw+fztx44d42ye8Mknn6C7u/umc/NwUdPpa29vj1SpVHKVSjWjQalUkvQ+dXV1cUajcYQ8AGcFBwQCgZ0/MStz5LHm4FTh3t7eRRUVFYE7duzgNFKsev311wdtNtt5ZkBkC0BJ7pPGxkZVTk6OkCgFE1SByMnJ8b5586aqr69P6PA2nOg6TwHIGaQplcq/njx5UkIVDjYoqc/Ly7MMDw+fZduaK6KvNxgMQ01NTfEFBQU8B/39HUT0tm3b5mW1WsPVavVKs9lMQo8wBfFQADqARKFQmLtnz55VlZWVfFeVadL7/Px8OArKHpXXnVizdu3aLefOnfNi34QTHR0dxDBx9uzZkZGRkV8dbnTAx8dHSyVJZ9WCBCCKbjKZ6DTIT6/w8/OL2bp1a9Cbb74Jd19/JiYm7DWg+vr6Bkc1nIPZBCC8kJiYuPnEiRMuT8cJ+vZ76dIleyWitbWVXOSo2WzW22w2upVp4vMikcg3NDQ0IDk5WbJx40Zs3rwZ7r78EIhglpSU0Kcrt5uHh2E+Ljg4OO/o0aO+dJVzgSgFlSRHRkbgjLbkgfz9/REREQG2X3eFhoYGlJaWTt2/f//fs30f81QAAhVN/1JaWhr+8ccfY8mSJZwOzwOU+Bw4cABffPFFv8lk+on5HcAdXBmxK9DPAG63tLRYTp06FUSegz44zPfrvDvo9XocP34cu3btMtfW1t6wWq21nkb2hTBFyu3WRkZGriosLBSTkSUnJ3NKIZ6AInxNTQ2qq6tNd+/eJSb383wj/bNQXTkFaaoSx8fHL83KyuKtX7/eXjGjnyDQ7VDpA/+r69i/bBJzpUyKqHtjY+O0Wq3u0+v15Lmo1u82MP5RAjDnoJ8iRFCtUigUBlDFjOpNPB6PTzdjpS/eFotFp9NNmEwmihl0yqTfpCYLLxoA+C+mxPU8YgDPLQAAAABJRU5ErkJggg==";
extern NSString * const kLoopMeResourceBase64Replay = @"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";
extern NSString * const kLoopMeResourceBase64Mute = @"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";
extern NSString * const kLoopMeResourceBase64Close = @"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";
extern NSString * const kLoopMeResourceBase64Ad = @"PGh0bWw+CjxoZWFkZXI+CiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEiPgo8L2hlYWRlcj4KCjxib2R5IHN0eWxlPSJtYXJnaW46MCI+CiAgICA8c2NyaXB0IHNyYz0iaHRtbC9pb3MvTG9vcE1lVUkuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Imh0bWwvaW9zL3ZwYWlkLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSclQCc+PC9zY3JpcHQ+CiAgICA8dmlkZW8gc3R5bGU9InBvc2l0aW9uOmFic29sdXRlOyB3aWR0aDoxMDAlJTsgaGVpZ2h0OjEwMCUlOyB6LWluZGV4OjE7IiBpZD0ibG9vcG1lLXZpZGVvc2xvdCIgd2Via2l0LXBsYXlzaW5saW5lCiAgICAgICAgcGxheXNpbmxpbmU+CiAgICA8L3ZpZGVvPgogICAgPGRpdiBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7IHdpZHRoOjEwMCUlOyBoZWlnaHQ6MTAwJSU7IHotaW5kZXg6IDI7IC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7IiBpZD0ibG9vcG1lLXNsb3QiPgogICAgPC9kaXY+CjwvYm9keT4KCjwvaHRtbD4K";
